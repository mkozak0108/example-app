{"version":3,"sources":["services/ApolloCache.js","services/ApolloClient.js","constants/index.js","queries/User.js","components/LoginForm.js","components/UserCard.js","components/Header.js","pages/Login/Login.js","pages/Home/Home.js","pages/Logout.js","PrivateRoute.js","ErrorFallback.js","App.js","reportWebVitals.js","styles/theme.js","index.js"],"names":["userIDVar","makeVar","localStorage","getItem","InMemoryCache","typePolicies","Query","fields","userID","read","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","ApolloClient","cache","apolloCache","link","concat","GET_USER","gql","GET_USER_ID","LOGIN","LoginForm","onSubmit","loading","error","useForm","handleSubmit","control","className","Grid","container","direction","alignItems","defaultValue","as","TextField","name","type","placeholder","autoFocus","required","Button","variant","color","disabled","CircularProgress","size","Alert","severity","UserCard","user","fullName","firstName","lastName","join","Card","CardContent","Typography","Header","AppBar","position","Toolbar","justify","to","Login","history","useHistory","useQuery","data","useMutation","onCompleted","login","setItem","jwt","id","onError","err","console","useEffect","replace","message","variables","Home","skip","userData","Logout","client","useApolloClient","removeItem","clearStore","then","PrivateRoute","children","rest","render","location","pathname","state","from","ErrorFallback","resetErrorBoundary","contianer","onClick","App","FallbackComponent","onReset","window","reload","apolloClient","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","deepOrange","secondary","teal","ReactDOM","StrictMode","basename","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.b6d16c83.chunk.js","sourcesContent":["import {\r\n  InMemoryCache,\r\n  makeVar\r\n} from '@apollo/client';\r\n\r\n\r\nexport const userIDVar = makeVar(localStorage.getItem('userID'));\r\n\r\nexport default new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        userID: {\r\n          read: () => userIDVar()\r\n        }\r\n      }\r\n    }\r\n  }\r\n});","import {\r\n  ApolloClient,\r\n  createHttpLink\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport apolloCache from './ApolloCache';\r\nimport { BACKEND_URL } from '../constants';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: BACKEND_URL,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nexport default new ApolloClient({\r\n  cache: apolloCache,\r\n  link: authLink.concat(httpLink),\r\n});\r\n\r\n","export const BACKEND_URL = 'https://cms.trial-task.k8s.ext.fcse.io/graphql';","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_USER = gql`\r\n  query user($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      email\r\n      firstName\r\n      lastName\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_ID = gql`\r\n  query userID {\r\n    userID @client\r\n  }\r\n`;\r\n\r\nexport const GET_ME = gql`\r\n  query me {\r\n    me {\r\n      id\r\n      email\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(input: {\r\n      identifier: $email,\r\n      password: $password\r\n    }) {\r\n      jwt\r\n      user {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { TextField, Button, Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport './LoginForm.css'\r\n\r\nfunction LoginForm({ onSubmit, loading = false, error }) {\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <div className=\"login-form-control\">\r\n          <Controller defaultValue=\"\" as={TextField} name=\"email\" type=\"email\" placeholder=\"Email\" autoFocus required control={control} />\r\n        </div>\r\n        <div className=\"login-form-control\">\r\n          <Controller defaultValue=\"\" as={TextField} name=\"password\" type=\"password\" placeholder=\"Password\" required control={control} />\r\n        </div>\r\n\r\n        <div className=\"login-form-control\">\r\n          <Button className=\"login-form-submit\" variant=\"contained\" color=\"primary\" disabled={loading} type=\"submit\">\r\n            Login\r\n            {loading && <CircularProgress className=\"login-form-loader\" size={14}/>}\r\n          </Button>\r\n        </div>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport { Typography, Card, CardContent, CircularProgress } from '@material-ui/core'\r\n\r\nfunction UserCard({ user, loading }) {\r\n  if (loading) {\r\n    return <CircularProgress className=\"user-card-loader\"/>\r\n  }\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  const fullName = [user.firstName, user.lastName].join(' ');\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h3\">\r\n          Welcome, {fullName}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default UserCard;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, Button, Grid } from '@material-ui/core'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">Example App</Typography>\r\n          <Button><Link to=\"/logout\">Logout</Link></Button>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './Login.css';\r\nimport { userIDVar } from '../../services';\r\nimport { LOGIN, GET_USER_ID } from '../../queries';\r\nimport { LoginForm } from '../../components';\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const { data: { userID } } = useQuery(GET_USER_ID);\r\n\r\n  const [login, { loading, error }] = useMutation(LOGIN, {\r\n    onCompleted({ login }) {\r\n      localStorage.setItem('token', login.jwt);\r\n      localStorage.setItem('userID', login.user.id);\r\n      userIDVar(login.user.id);\r\n    },\r\n    onError(err) {\r\n      console.error(err);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (userID) {\r\n      history.replace('/');\r\n    }\r\n  }, [userID, history]);\r\n\r\n  return (\r\n    <Grid className=\"login-page-container\" container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      <LoginForm\r\n        error={error ? error.message : ''}\r\n        loading={loading}\r\n        onSubmit={variables => login({ variables })}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport './Home.css';\r\nimport { UserCard, Header } from '../../components';\r\nimport { GET_USER_ID, GET_USER } from '../../queries';\r\n\r\nfunction Home() {\r\n  const { data: { userID } } = useQuery(GET_USER_ID);\r\n  const { data: userData, loading } = useQuery(GET_USER, {\r\n    variables: { id: userID },\r\n    skip: !userID\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"home-root\">\r\n      <Header/>\r\n      <div className=\"home-content\">\r\n        <UserCard loading={loading} user={userData ? userData.user : null}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import { useApolloClient } from \"@apollo/client\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { userIDVar } from '../services';\r\n\r\nfunction Logout() {\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('userID');\r\n  client.clearStore().then(() => {\r\n    userIDVar('');\r\n    history.replace('/login');\r\n  });\r\n\r\n  return null;\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_USER_ID } from './queries';\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n  const { data: { userID } } = useQuery(GET_USER_ID);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userID ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nexport default function ErrorFallback({ error, resetErrorBoundary }) {\r\n  return (\r\n    <Grid contianer direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n      <Alert severity=\"error\">\r\n        <p>Something went wrong:</p>\r\n        <pre>{error.message}</pre>\r\n        <Button variant=\"contained\" onClick={resetErrorBoundary}>Reload page</Button>\r\n      </Alert>\r\n    </Grid>\r\n  )\r\n}","import React  from 'react';\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\n\nimport { Home, Login, Logout } from './pages'\nimport { apolloClient } from './services';\nimport PrivateRoute from './PrivateRoute';\nimport ErrorFallback from './ErrorFallback'\n\nfunction App() {\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback}\n      onReset={() => window.location.reload()}\n    >\n      <ApolloProvider client={apolloClient}>\n        <Switch>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/logout\">\n            <Logout/>\n          </Route>\n          <PrivateRoute exact path=\"/\">\n            <Home/>\n          </PrivateRoute>\n        </Switch>\n      </ApolloProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { deepOrange, teal } from '@material-ui/core/colors';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: deepOrange,\r\n    secondary: teal\r\n  },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './styles/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/example-app\">\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}